#!perl -w
use strict;

use Data::Dumper;

my $current_indentation = 0;
sub say_indent {
    my $text = join '', @_, '';

    print ' ' x (4 * $current_indentation), $text, "\n";
}

sub do_indented {
    my ($code) = @_;

    ++$current_indentation;
    $code->();
    --$current_indentation;
}

say_indent('---');

my $interface;
my $description;
my %methods;

while (my $line = <>) {

    chomp $line;

    if ( $line =~ / \s interface \s+ (\w+) /x ) {

        $interface = $1;
    }

    if ( $line =~ / \@PublishedClass /x ) {
        $line .= <> while $line !~ /\)\s*$/;

        $description = $line;
        $description =~ s{ ^ \s* \@PublishedClass \s* \( \s* }{}x;
        $description =~ s{ ^ value \s* = \s* }{}x;
        $description =~ s{ " \s* \+ \s* " }{}xg;
        $description =~ s{ \) \s* }{}x;
        $description =~ s{ ^ " }{}x;
        $description =~ s{ " $ }{}x;
    }

    if ( $line =~ / \@PublishedMethod /x ) {
        $line .= <> while $line !~ /\)\s*$/;

        my $method_desc = $line;
        $method_desc =~ s{ ^ \s* \@PublishedMethod \s* \( \s* }{}x;
        $method_desc =~ s{ " \s* \+ \s* " }{}xg;
        $method_desc =~ s{ \) \s* }{}x;

        my %method_desc = ();
        if ( $method_desc =~ m{ params \s* = \s* " ([^"]*) " }x ) {
            $method_desc{params} = $1;
        }
        if ( $method_desc =~ m{ methodSummary \s* = \s* " ([^"]*) " }x ) {
            $method_desc{summary} = $1;
        }

        my $method_signature = <>;
        $method_signature = <> while    $method_signature =~ m{^\s*$}
                                     or $method_signature =~ m{^\s*\@\w+\s*$};

        die 'Your format is silly: ', $method_signature
          if $method_signature !~ m{\(};

        if ( $method_signature =~ m{ \s (\w+) \s* \( }x ) {
            $methods{$1} = \%method_desc;
        }
        else {
            die 'Found no name to hang the method on: ', $method_signature;
        }
    }

    if ( defined $interface && defined $description ) {
        say_indent( $interface, ':' );
        do_indented sub {
            say_indent( 'Description: ', $description );
            say_indent( 'Methods:' );

            do_indented sub {
                for my $name ( sort keys %methods ) {
                    say_indent( '- ',  $name );

                    do_indented sub {   
                        for my $prop ( reverse sort keys %{$methods{$name}} ) {
                            say_indent( '- ', $prop,
                                        ': ', $methods{$name}{$prop} );
                        }
                    };
                }
            };
        };
        say_indent();

        undef $interface;
        undef $description;
        undef %methods;
    }
}

say_indent('...');
