<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBatis.com//iBatis.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<!--+
    | Copyright (c) 2007 Bioclipse Project
    | All rights reserved. This program and the accompanying materials
    | are made available under the terms of the Eclipse Public License v1.0
    | which accompanies this distribution, and is available at
    | http://www.eclipse.org/legal/epl-v10.html
    +-->
<sqlMap>

<!--+
    | PARAMATER MAPS
    +-->
    <parameterMap class="Structure" id="Structure.insert">
        <parameter property="id"                                     />     
        <parameter property="name"                                   />
        <parameter property="id"                                     />    
        <parameter property="smiles"                                 />   
        <parameter property="persistedFingerprint" jdbcType="binary" />     
        <parameter property="CML"                                    /> 
    </parameterMap>

    <parameterMap class="Structure" id="Structure.update">
        <parameter property="smiles"                                 />
        <parameter property="persistedFingerprint" jdbcType="binary" />
        <parameter property="CML"                                    />
        <parameter property="name"                                   />    
    </parameterMap>
    
<!--+
    | RESULT MAPS
    +-->
	<resultMap class="BaseObject" id="BaseObject">
		<result property="id"         column="id"                               />
		<result property="created"    column="created"                          />
		<result property="edited"     column="edited"                           />
		<result property="creator"    column="creator"    select="User.getById" />
		<result property="lastEditor" column="lastEditor" select="User.getById" />
	</resultMap>

	<resultMap class="Annotation" id="Annotation" extends="BaseObject">
		<result property="structures" column="id" select="Annotation.getStructures"  />
		<result property="name"       column="name"                             />
	</resultMap>
	
	<resultMap class="Structure" id="Structure" extends="BaseObject">
		<result property="annotations"          column="id" select="Structure.getAnnotations" />
		<result property="persistedFingerprint" column="persistedFingerprint" jdbcType="binary" />
		<result property="smiles"               column="smiles"                         />
		<result property="CML"                  column="molecule"                       />
		<result property="name"                 column="name"                           />
	</resultMap>

	<resultMap class="User" id="User" extends="BaseObject">
		<result property="userName"      column="userName" />
		<result property="passWordMd5"   column="passWord" />
		<result property="sudoer"        column="sudoer"   />
	</resultMap>

<!--+
    | SQL FRAGMENTS
    +-->
	<sql id="BaseObject-fields">
		b.id         AS id,
		b.created    AS created,
		b.edited     AS edited,
		b.creator    AS creator,
		b.lastEditor AS lastEditor	
	</sql>
	
	<sql id="Structure-fields">
		s.persistedFingerprint AS persistedFingerprint,
		s.smiles               AS smiles,
		s.molecule             AS molecule,
		s.name                 AS name	
	</sql>
	
	<sql id="User-fields">
		u.userName AS userName,
		u.passWord AS passWord,
		u.sudoer   AS sudoer
	</sql>
	
	<sql id="Annotation-fields">
	   l.name AS name
	</sql>
	
<!--+
    | INSERT STATEMENTS
    +-->
	<insert  id="BaseObject.insert">
		INSERT INTO BaseObject (  id,     created,     edited,     creator,        lastEditor )
			            VALUES ('$id$', '$created$', '$edited$', '$creator.id$', '$lastEditor.id$')
	</insert>
	
	<insert id="BaseObject.insertWithoutAuditInfo">
        INSERT INTO BaseObject (  id   )
                        VALUES ('$id$' )
    </insert>
	
	<insert id="User.insert">
		INSERT INTO User (   id,     userName,     passWord,        sudoer,     baseObject )
			      VALUES ( '$id$', '$userName$', '$passWordMd5$', '$sudoer$', '$id$'       );
	</insert>
	
	<insert id="Structure.insert" parameterMap="Structure.insert">
		INSERT INTO Structure ( id, name, baseObject, smiles, persistedFingerprint, molecule )
		               VALUES ( ?, ?, ?, ?, ?, ? ); 
	</insert>
	
	<insert id="Annotation.insert">
		INSERT INTO Annotation (   id,     baseObject, name   )
		           VALUES ( '$id$', '$id$',     '$name$' );
	</insert>
	
<!--+
    | SELECT STATEMENTS
    +-->

    <select id="Structure.numberOf" parameterClass="java.util.Map" resultClass="int">
        SELECT 
            count(*) as numberOf 
        FROM
            Structure
    </select>
    
	<select id="Structure.getById" parameterClass="String" resultMap="Structure">
		SELECT 
			<include refid="BaseObject-fields" />, 
			<include refid="Structure-fields"  />
		FROM
			Structure s INNER JOIN BaseObject b ON
			s.baseObject = b.id
		WHERE 
			s.id = #value#
	</select>
	
	<select id="User.getById" parameterClass="String" resultMap="User">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="User-fields"       />
		FROM
			User u INNER JOIN BaseObject b ON
			u.baseObject = b.id
		WHERE 
			u.id = #value#
	</select>
	
	<select id="User.getByUsername" parameterClass="String" resultMap="User">
        SELECT 
            <include refid="BaseObject-fields" />,
            <include refid="User-fields"       />
        FROM
            User u INNER JOIN BaseObject b ON
            u.baseObject = b.id
        WHERE 
            u.username = #value#
    </select>
	
	<select id="Annotation.getById" resultMap="Annotation" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields"      />
		FROM
			Annotation l INNER JOIN BaseObject b ON
			l.baseObject = b.id
		WHERE 
			l.id = #value#
	</select>
	
	<select id="Annotation.getByName" resultMap="Annotation" parameterClass="String">
        SELECT 
            <include refid="BaseObject-fields" />,
            <include refid="Annotation-fields"      />
        FROM
            Annotation l INNER JOIN BaseObject b ON
            l.baseObject = b.id
        WHERE 
            l.name = #value#
    </select>
	
	<select id="Annotation.getStructures" resultMap="Structure" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Structure-fields"  />
		FROM
			Structure s INNER JOIN BaseObject b ON s.baseObject = b.id, 
			StructureAnnotation sl
		WHERE 
			sl.annotationId = #value# AND sl.structureId = s.id
	</select>
	
	<select id="Structure.getAll" resultMap="Structure">
		SELECT
			<include refid="BaseObject-fields" />, 
			<include refid="Structure-fields"  />
		FROM
			Structure s INNER JOIN BaseObject b ON
			s.baseObject = b.id
	</select>
	
	<select id="Structure.getByName" resultMap="Structure" parameterClass="String">
        SELECT
            <include refid="BaseObject-fields" />, 
            <include refid="Structure-fields"  />
        FROM
            Structure s INNER JOIN BaseObject b ON
            s.baseObject = b.id
        WHERE
            s.name = #value#
    </select>
	
	<select id="Structure.getAnnotations" resultMap="Annotation" parameterClass="String">
        SELECT 
            <include refid="BaseObject-fields" />,
            <include refid="Annotation-fields"  />
        FROM
            Annotation l INNER JOIN BaseObject b ON l.baseObject = b.id, 
            StructureAnnotation sl
        WHERE 
            sl.structureId = #value# AND sl.annotationId = l.id
    </select>
	
	<select id="Annotation.getAll" resultMap="Annotation">
		SELECT
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields"      />
		FROM
			Annotation l INNER JOIN BaseObject b ON
			l.baseObject = b.id
	</select>

	<select id="User.getAll" resultMap="User">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="User-fields"       />
		FROM
			User u INNER JOIN BaseObject b ON
			u.baseObject = b.id
	</select>
	
	<select id="Structure.fingerPrintSubsetSearch" 
	        resultMap="Structure"
	        parameterClass="java.util.Map">
        SELECT
            <include refid="BaseObject-fields" />, 
            <include refid="Structure-fields"  />
        FROM
            Structure s INNER JOIN BaseObject b ON
            s.baseObject = b.id
        WHERE
            BITAND(s.persistedFingerprint, #param:BINARY#) = #param:BINARY# 
    </select>
    
    <select id="Structure.numberOfFingerprintSubstructureMatches"
            parameterClass="java.util.Map" 
            resultClass="int" >
        SELECT 
            count(*) as numberOf 
        FROM
            Structure s
        WHERE 
            BITAND(s.persistedFingerprint, #param:BINARY#) = #param:BINARY#
    </select>
    
    <select id="StructureAnnotation.hasConnection"
            parameterClass="java.util.Map"
            resultClass="int" >
        SELECT
            count(*) as numberOf
        FROM
            StructureAnnotation sl
        WHERE
            sl.StructureId = #structureId# 
            AND sl.AnnotationId = #annotationId#
    </select>
	
<!--+
    | DELETE STATEMENTS
    +-->	
	<delete id="BaseObject.delete" parameterClass="String">
		DELETE FROM 
            BaseObject
		WHERE 
            id='$value$';
	</delete>
	
    <delete id="Structure.deleteAnnotationCoupling" parameterClass="Structure">
        DELETE FROM 
	       StructureAnnotation
        WHERE 
	       structureId = '$id$'
	</delete>
	
	<delete id="Annotation.deleteStructureCoupling" parameterClass="Annotation">
	   DELETE FROM 
	       StructureAnnotation
	   WHERE 
	       annotationId = '$id$'
	</delete>
<!--+
    | UPDATE STATEMENTS
    +-->
    <update id="BaseObject.update" parameterClass="BaseObject">
    	UPDATE 
    		BaseObject
    	SET 
			created    = '$created$',
			edited     = '$edited$',
			creator    = '$creator.id$',
			lastEditor = '$lastEditor.id$'	
		WHERE
			id = '$id$'
    </update>
    
    <update id="User.update" parameterClass="User">
    	UPDATE 
    		User
    	SET 
	    	userName = '$userName$',
			passWord = '$passWordMd5$',
			sudoer   = '$sudoer$'
		WHERE
			id = '$id$'
    </update>
    
    <update id="Annotation.update" parameterClass="Annotation">
        UPDATE
            Annotation
        SET
            name = '$name$'
        WHERE
            id = '$id$'    	
    </update>
    
    <update id="Structure.update" parameterMap="Structure.update">
    	UPDATE 
    		Structure
    	SET 
	    	smiles               = ?,
	    	persistedFingerprint = ?,
	    	molecule             = ?,
	    	name                 = ?
		WHERE
			id = '$id$'
    </update>
    
    <update id="StructureAnnotation.connect" parameterClass="java.util.Map">
        INSERT into StructureAnnotation (   structureId,     annotationId   ) 
                                 VALUES ( '$structureId$', '$annotationId$' )
    </update>
</sqlMap>