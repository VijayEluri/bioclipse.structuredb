<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBatis.com//iBatis.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<!--+
    | Copyright (c) 2007 Bioclipse Project
    | All rights reserved. This program and the accompanying materials
    | are made available under the terms of the Eclipse Public License v1.0
    | which accompanies this distribution, and is available at
    | http://www.eclipse.org/legal/epl-v10.html
    +-->
<sqlMap>

<!--+
    | PARAMATER MAPS
    +-->
    <parameterMap class="DBMolecule" id="DBMolecule.insert">
        <parameter property="id"                                     />     
        <parameter property="name"                                   />
        <parameter property="id"                                     />    
        <parameter property="SMILES"                                 />   
        <parameter property="persistedFingerprint" jdbcType="binary" />     
        <parameter property="CML"                                    /> 
    </parameterMap>

    <parameterMap class="DBMolecule" id="DBMolecule.update">
        <parameter property="SMILES"                                 />
        <parameter property="persistedFingerprint" jdbcType="binary" />
        <parameter property="CML"                                    />
        <parameter property="name"                                   />    
    </parameterMap>
    
<!--+
    | RESULT MAPS
    +-->
	<resultMap class="BaseObject" id="BaseObject">
		<result property="id"         column="id"                               />
		<result property="created"    column="created"                          />
		<result property="edited"     column="edited"                           />
		<result property="creator"    column="creator"    select="User.getById" />
		<result property="lastEditor" column="lastEditor" select="User.getById" />
	</resultMap>

	<resultMap class="Annotation" id="Annotation" extends="BaseObject">
		<result property="DBMolecules" column="id" select="Annotation.getDBMolecules"  />
		<discriminator column="sortOf" javaType="String">
			<subMap value="Text"       resultMap="TextAnnotation"/>
			<subMap value="RealNumber" resultMap="RealNumberAnnotation"/>
			<subMap value="Choice"     resultMap="ChoiceAnnotation"/>
		</discriminator>
	</resultMap>
	
	<resultMap class="DBMolecule" id="DBMolecule" extends="BaseObject">
		<result property="annotations"          column="id" select="DBMolecule.getAnnotations" />
		<result property="persistedFingerprint" column="persistedFingerprint" jdbcType="binary" />
		<result property="SMILES"               column="SMILES"                         />
		<result property="CML"                  column="molecule"                       />
		<result property="name"                 column="name"                           />
	</resultMap>

	<resultMap class="User" id="User" extends="BaseObject">
		<result property="userName"      column="userName" />
		<result property="passWordMd5"   column="passWord" />
		<result property="sudoer"        column="sudoer"   />
	</resultMap>
	
	<resultMap class="TextAnnotation" id="TextAnnotation" extends="Annotation">
		<result property="value" column="value" />
		<result property="property" column="property" select="TextProperty.getById" /> 
	</resultMap>
	
	<resultMap class="RealNumberAnnotation" id="RealNumberAnnotation" extends="Annotation">
		<result property="value" column="value" />
		<result property="property" column="property" select="RealNumberProperty.getById" />
	</resultMap>
	
	<resultMap class="ChoiceAnnotation" id="ChoiceAnnotation" extends="Annotation">
		<result property="value" column="value" />
		<result property="property" column="property" select="ChoiceProperty.getById" />
	</resultMap>
	
	<resultMap class="TextProperty" id="TextProperty" extends="BaseObject">
		<result property="name" column="name" />
	</resultMap>
	
	<resultMap class="RealNumberProperty" id="RealNumberProperty" extends="BaseObject">
		<result property="name" column="name" />
	</resultMap>
	
	<resultMap class="ChoiceProperty" id="ChoiceProperty" extends="BaseObject">
		<result property="name" column="name" />
		<result property="propertyChoices" column="id" select="ChoiceProperty.getPropertyChoices" />
	</resultMap>
	
	<resultMap class="PropertyChoice" id="PropertyChoice" extends="BaseObject">
		<result property="value" column="value" />
	</resultMap>

<!--+
    | SQL FRAGMENTS
    +-->
	<sql id="BaseObject-fields">
		b.id         AS id,
		b.created    AS created,
		b.edited     AS edited,
		b.creator    AS creator,
		b.lastEditor AS lastEditor	
	</sql>
	
	<sql id="DBMolecule-fields">
		s.persistedFingerprint AS persistedFingerprint,
		s.SMILES               AS SMILES,
		s.molecule             AS molecule,
		s.name                 AS name	
	</sql>
	
	<sql id="User-fields">
		u.userName AS userName,
		u.passWord AS passWord,
		u.sudoer   AS sudoer
	</sql>
	
	<sql id="Annotation-fields">
		a.sortOf AS sortOf
	</sql>
	
	<sql id="TextAnnotation-fields">
		t.val AS value,
		t.textProperty AS property
	</sql>
	
	<sql id="RealNumberAnnotation-fields">
		r.val AS value,
		r.realNumberProperty AS property
	</sql>
	
	<sql id="ChoiceAnnotation-fields">
		c.val AS value,
		c.choiceProperty as property
	</sql>
	
	<sql id="TextProperty-fields">
		t.name AS name
	</sql>
	
	<sql id="RealNumberProperty-fields">
		r.name AS name
	</sql>
	
	<sql id="ChoiceProperty-fields">
		c.name AS name
	</sql>
	
	<sql id="PropertyChoice-fields">
		p.val AS value
	</sql>
	
<!--+
    | INSERT STATEMENTS
    +-->
	<insert  id="BaseObject.insert">
		INSERT INTO BaseObject (  id,     created,     edited,     creator,        lastEditor )
			            VALUES ('$id$', '$created$', '$edited$', '$creator.id$', '$lastEditor.id$')
	</insert>
	
	<insert id="BaseObject.insertWithoutAuditInfo">
        INSERT INTO BaseObject (  id   )
                        VALUES ('$id$' )
    </insert>
	
	<insert id="User.insert">
		INSERT INTO User (   id,     userName,     passWord,        sudoer,     baseObject )
			      VALUES ( '$id$', '$userName$', '$passWordMd5$', '$sudoer$', '$id$'       );
	</insert>
	
	<insert id="DBMolecule.insert" parameterMap="DBMolecule.insert">
		INSERT INTO DBMolecule ( id, name, baseObject, SMILES, persistedFingerprint, molecule )
		               VALUES ( ?, ?, ?, ?, ?, ? ); 
	</insert>
	
	<insert id="Annotation.insert">
		INSERT INTO Annotation (   id,     baseObject, sortOf   )
		                VALUES ( '$id$', '$id$',     '$sortOf$' );
	</insert>
	
	<insert id="TextAnnotation.insert">
		INSERT INTO TextAnnotation (   id,     annotation, val    ,   textProperty   )
		                    VALUES ( '$id$', '$id$',     '$value$', '$property.id$' );
	</insert>
	
	<insert id="RealNumberAnnotation.insert">
		INSERT INTO RealNumberAnnotation (  id,     annotation, val,       realNumberProperty   )
		                         VALUES ( '$id$', '$id$',     '$value$', '$property.id$' );
	</insert>
	
	<insert id="ChoiceAnnotation.insert">
		INSERT INTO ChoiceAnnotation (   id,     annotation, val,       choiceProperty   )
		                      VALUES ( '$id$', '$id$',     '$value$', '$property.id$' );
	</insert>
	
	<insert id="TextProperty.insert">
		INSERT INTO TextProperty (   id,     baseObject, name   )
		                  VALUES ( '$id$', '$id$',     '$name$' );
	</insert>
	
	<insert id="RealNumberProperty.insert">
		INSERT INTO RealNumberProperty (   id,     baseObject, name   )
		                        VALUES ( '$id$', '$id$',     '$name$' );
	</insert>
	
	<insert id="ChoiceProperty.insert">
		INSERT INTO ChoiceProperty (   id,     baseObject, name   )
		                    VALUES ( '$id$', '$id$',     '$name$' );
	</insert>
	
	<insert id="PropertyChoice.insert">
		INSERT INTO PropertyChoice (   id,     baseObject, val     )
		                    VALUES ( '$id$', '$id$',     '$value$' );
	</insert>
	
	<insert id="PropertyChoice.insertWithChoiceProperty">
		INSERT INTO PropertyChoice (   id,     baseObject, val,       choicePropertyId )
		                    VALUES ( '$id$', '$id$',     '$value$', '$property.id$'    );
	</insert>
	
<!--+
    | SELECT STATEMENTS
    +-->

    <select id="DBMolecule.numberOf" parameterClass="java.util.Map" resultClass="int">
        SELECT 
            count(*) as numberOf 
        FROM
            DBMolecule
    </select>
    
	<select id="DBMolecule.getById" parameterClass="String" resultMap="DBMolecule">
		SELECT 
			<include refid="BaseObject-fields" />, 
			<include refid="DBMolecule-fields"  />
		FROM
			DBMolecule s INNER JOIN BaseObject b ON
			s.baseObject = b.id
		WHERE 
			s.id = #value#
	</select>
	
	<select id="User.getById" parameterClass="String" resultMap="User">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="User-fields"       />
		FROM
			User u INNER JOIN BaseObject b ON
			u.baseObject = b.id
		WHERE 
			u.id = #value#
	</select>
	
	<select id="User.getByUsername" parameterClass="String" resultMap="User">
        SELECT 
            <include refid="BaseObject-fields" />,
            <include refid="User-fields"       />
        FROM
            User u INNER JOIN BaseObject b ON
            u.baseObject = b.id
        WHERE 
            u.username = #value#
    </select>
	
	<select id="Annotation.getById" resultMap="Annotation" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields" />
		FROM
			Annotation a INNER JOIN BaseObject b ON
			a.baseObject = b.id
		WHERE 
			a.id = #value#
	</select>
	
	<select id="Annotation.getDBMolecules" resultMap="DBMolecule" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="DBMolecule-fields"  />
		FROM
			DBMolecule s INNER JOIN BaseObject b ON s.baseObject = b.id, 
			DBMoleculeAnnotation sl
		WHERE 
			sl.annotationId = #value# AND sl.dBMoleculeId = s.id
	</select>
	
	<select id="DBMolecule.getAll" resultMap="DBMolecule">
		SELECT
			<include refid="BaseObject-fields" />, 
			<include refid="DBMolecule-fields"  />
		FROM
			DBMolecule s INNER JOIN BaseObject b ON
			s.baseObject = b.id
	</select>
	
	<select id="DBMolecule.getByName" resultMap="DBMolecule" parameterClass="String">
        SELECT
            <include refid="BaseObject-fields" />, 
            <include refid="DBMolecule-fields"  />
        FROM
            DBMolecule s INNER JOIN BaseObject b ON
            s.baseObject = b.id
        WHERE
            s.name = #value#
    </select>
	
	<select id="DBMolecule.getAnnotations" resultMap="Annotation" parameterClass="String">
        SELECT 
            <include refid="BaseObject-fields" />,
			<include refid="Annotation-fields" />,
			<include refid="TextAnnotation-fields" />,
			<include refid="ChoiceAnnotation-fields" />,
			<include refid="RealNumberAnnotation-fields" />
        FROM
            Annotation a INNER JOIN BaseObject b           ON a.baseObject = b.id
                         LEFT OUTER JOIN TextAnnotation t       ON t.annotation = a.id
                         LEFT OUTER JOIN ChoiceAnnotation c     ON c.annotation = a.id
                         LEFT OUTER JOIN RealNumberAnnotation r ON r.annotation = a.id, 
            DBMoleculeAnnotation sl
        WHERE 
            sl.dBMoleculeId = #value# AND sl.annotationId = a.id
    </select>

	<select id="User.getAll" resultMap="User">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="User-fields"       />
		FROM
			User u INNER JOIN BaseObject b ON
			u.baseObject = b.id
	</select>
	
	<select id="ChoiceAnnotation.getAll" resultMap="ChoiceAnnotation">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields" />,
			<include refid="ChoiceAnnotation-fields" />
		FROM
			ChoiceAnnotation c 
			INNER JOIN Annotation a ON
			c.annotation = a.id
			INNER JOIN BaseObject b ON
			a.baseObject = b.id
	</select>
	
	<select id="ChoiceAnnotation.getById" resultMap="ChoiceAnnotation" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields" />,
			<include refid="ChoiceAnnotation-fields" />
		FROM
			ChoiceAnnotation c 
			INNER JOIN Annotation a ON
			c.annotation = a.id
			INNER JOIN BaseObject b ON
			a.baseObject = b.id
		WHERE 
			c.id = #value#
	</select>
	
	<select id="TextAnnotation.getAll" resultMap="TextAnnotation">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields" />,
			<include refid="TextAnnotation-fields" />
		FROM
			TextAnnotation t 
			INNER JOIN Annotation a ON
			t.annotation = a.id
			INNER JOIN BaseObject b ON
			a.baseObject = b.id
	</select>
	
	<select id="TextAnnotation.getById" resultMap="TextAnnotation" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields" />,
			<include refid="TextAnnotation-fields" />
		FROM
			TextAnnotation t 
			INNER JOIN Annotation a ON
			t.annotation = a.id
			INNER JOIN BaseObject b ON
			a.baseObject = b.id
		WHERE 
			t.id = #value#
	</select>	

	<select id="RealNumberAnnotation.getAll" resultMap="RealNumberAnnotation">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields" />,
			<include refid="RealNumberAnnotation-fields" />
		FROM
			RealNumberAnnotation r 
			INNER JOIN Annotation a ON
			r.annotation = a.id
			INNER JOIN BaseObject b ON
			a.baseObject = b.id
	</select>
	
	<select id="RealNumberAnnotation.getById" resultMap="RealNumberAnnotation" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="Annotation-fields" />,
			<include refid="RealNumberAnnotation-fields" />
		FROM
			RealNumberAnnotation r 
			INNER JOIN Annotation a ON
			r.annotation = a.id
			INNER JOIN BaseObject b ON
			a.baseObject = b.id
		WHERE 
			r.id = #value#
	</select>	

	<select id="TextProperty.getAll" resultMap="TextProperty">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="TextProperty-fields" />
		FROM
			TextProperty t 
			INNER JOIN BaseObject b ON
			t.baseObject = b.id
	</select>
	
	<select id="TextProperty.getById" resultMap="TextProperty" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="TextProperty-fields" />
		FROM
			TextProperty t 
			INNER JOIN BaseObject b ON
			t.baseObject = b.id
		WHERE 
			t.id = #value#
	</select>
	
	<select id="TextProperty.getByName" resultMap="TextProperty" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="TextProperty-fields" />
		FROM
			TextProperty t 
			INNER JOIN BaseObject b ON
			t.baseObject = b.id
		WHERE 
			t.name = #value#
	</select>	

	<select id="RealNumberProperty.getAll" resultMap="RealNumberProperty">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="RealNumberProperty-fields" />
		FROM
			RealNumberProperty r 
			INNER JOIN BaseObject b ON
			r.baseObject = b.id
	</select>
	
	<select id="RealNumberProperty.getById" resultMap="RealNumberProperty" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="RealNumberProperty-fields" />
		FROM
			RealNumberProperty r 
			INNER JOIN BaseObject b ON
			r.baseObject = b.id
		WHERE 
			r.id = #value#
	</select>

	<select id="RealNumberProperty.getByName" resultMap="RealNumberProperty" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="RealNumberProperty-fields" />
		FROM
			RealNumberProperty r 
			INNER JOIN BaseObject b ON
			r.baseObject = b.id
		WHERE 
			r.name = #value#
	</select>
	
	<select id="ChoiceProperty.getAll" resultMap="ChoiceProperty">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="ChoiceProperty-fields" />
		FROM
			ChoiceProperty c 
			INNER JOIN BaseObject b ON
			c.baseObject = b.id
	</select>
	
	<select id="ChoiceProperty.getById" resultMap="ChoiceProperty" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="ChoiceProperty-fields" />
		FROM
			ChoiceProperty c 
			INNER JOIN BaseObject b ON
			c.baseObject = b.id
		WHERE 
			c.id = #value#
	</select>

	<select id="ChoiceProperty.getByName" resultMap="ChoiceProperty" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="ChoiceProperty-fields" />
		FROM
			ChoiceProperty c 
			INNER JOIN BaseObject b ON
			c.baseObject = b.id
		WHERE 
			c.name = #value#
	</select>
	
	<select id="ChoiceProperty.getPropertyChoices" resultMap="PropertyChoice" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
		    <include refid="PropertyChoice-fields" />
		FROM 
		    PropertyChoice p 
		    INNER JOIN BaseObject b ON
		    p.baseObject = b.id
		WHERE
		    p.id = b.id AND p.choicePropertyId = #value#
	</select>
	
	<select id="DBMolecule.fingerPrintSubsetSearch" 
	        resultMap="DBMolecule"
	        parameterClass="java.util.Map">
        SELECT
            <include refid="BaseObject-fields" />, 
            <include refid="DBMolecule-fields"  />
        FROM
            DBMolecule s INNER JOIN BaseObject b ON
            s.baseObject = b.id
        WHERE
            BITAND(s.persistedFingerprint, #param:BINARY#) = #param:BINARY# 
    </select>
    
    <select id="DBMolecule.numberOfFingerprintSubstructureMatches"
            parameterClass="java.util.Map" 
            resultClass="int" >
        SELECT 
            count(*) as numberOf 
        FROM
            DBMolecule s
        WHERE 
            BITAND(s.persistedFingerprint, #param:BINARY#) = #param:BINARY#
    </select>
    
    <select id="DBMoleculeAnnotation.hasConnection"
            parameterClass="java.util.Map"
            resultClass="int" >
        SELECT
            count(*) as numberOf
        FROM
            DBMoleculeAnnotation sl
        WHERE
            sl.DBMoleculeId = #dBMoleculeId# 
            AND sl.AnnotationId = #annotationId#
    </select>
    
   	<select id="PropertyChoice.getAll" resultMap="PropertyChoice">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="PropertyChoice-fields" />
		FROM
			PropertyChoice p 
			INNER JOIN BaseObject b ON
			p.baseObject = b.id
	</select>
    
   	<select id="PropertyChoice.getById" resultMap="PropertyChoice" parameterClass="String">
		SELECT 
			<include refid="BaseObject-fields" />,
			<include refid="PropertyChoice-fields" />
		FROM
			PropertyChoice p 
			INNER JOIN BaseObject b ON
			p.baseObject = b.id
		WHERE 
			p.id = #value#
	</select>
    
<!--+
    | DELETE STATEMENTS
    +-->	
	<delete id="BaseObject.delete" parameterClass="String">
		DELETE FROM 
            BaseObject
		WHERE 
            id='$value$';
	</delete>
	
    <delete id="DBMolecule.deleteAnnotationCoupling" parameterClass="DBMolecule">
        DELETE FROM 
	       DBMoleculeAnnotation
        WHERE 
	       dBMoleculeId = '$id$'
	</delete>
	
	<delete id="Annotation.deleteDBMoleculeCoupling" parameterClass="Annotation">
	   DELETE FROM 
	       DBMoleculeAnnotation
	   WHERE 
	       annotationId = '$id$'
	</delete>
<!--+
    | UPDATE STATEMENTS
    +-->
    <update id="BaseObject.update" parameterClass="BaseObject">
    	UPDATE 
    		BaseObject
    	SET 
			created    = '$created$',
			edited     = '$edited$',
			creator    = '$creator.id$',
			lastEditor = '$lastEditor.id$'	
		WHERE
			id = '$id$'
    </update>
    
    <update id="User.update" parameterClass="User">
    	UPDATE 
    		User
    	SET 
	    	userName = '$userName$',
			passWord = '$passWordMd5$',
			sudoer   = '$sudoer$'
		WHERE
			id = '$id$'
    </update>
    
    <update id="Annotation.update" parameterClass="Annotation">

    </update>
    
    <update id="ChoiceAnnotation.update" parameterClass="ChoiceAnnotation">
        UPDATE
            ChoiceAnnotation
        SET
            val = '$value$',
            choiceProperty = '$property.id$'
        WHERE
            id = '$id$'    	
    </update>
    
    <update id="TextAnnotation.update" parameterClass="TextAnnotation">
        UPDATE
            TextAnnotation
        SET
            val = '$value$',
            textProperty = '$property.id$'
        WHERE
            id = '$id$'    	
    </update>
    
    <update id="RealNumberAnnotation.update" parameterClass="RealNumberAnnotation">
        UPDATE
            RealNumberAnnotation
        SET
            val = '$value$',
            realNumberProperty = '$property.id$'
        WHERE
            id = '$id$'    	
    </update>
    
    <update id="TextProperty.update" parameterClass="TextProperty">
        UPDATE
            TextProperty
        SET
            name = '$name$'
        WHERE
            id = '$id$'    	
    </update>

    <update id="RealNumberProperty.update" parameterClass="RealNumberProperty">
        UPDATE
            RealNumberProperty
        SET
            name = '$name$'
        WHERE
            id = '$id$'
    </update>

    <update id="ChoiceProperty.update" parameterClass="ChoiceProperty">
        UPDATE
            ChoiceProperty
        SET
            name = '$name$'
        WHERE
            id = '$id$'
    </update>

    <update id="PropertyChoice.update" parameterClass="PropertyChoice">
        UPDATE
            PropertyChoice
        SET
            val = '$value$'
        WHERE
            id = '$id$'
    </update>
    
    <update id="PropertyChoice.updateWithChoiceProperty" parameterClass="PropertyChoice">
        UPDATE
            PropertyChoice
        SET
            val = '$value$'
            choicePropertyId = '$property.id$'
        WHERE
            id = '$id$'
    </update>
    
    <update id="DBMolecule.update" parameterMap="DBMolecule.update">
    	UPDATE 
    		DBMolecule
    	SET 
	    	SMILES               = ?,
	    	persistedFingerprint = ?,
	    	molecule             = ?,
	    	name                 = ?
		WHERE
			id = '$id$'
    </update>
    
    <update id="DBMoleculeAnnotation.connect" parameterClass="java.util.Map">
        INSERT into DBMoleculeAnnotation (   dBMoleculeId,     annotationId   ) 
                                 VALUES ( '$dBMoleculeId$', '$annotationId$' )
    </update>
</sqlMap>